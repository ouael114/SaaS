{"remainingRequest":"C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\src\\pages\\Layout\\Extra\\FixedPlugin.vue?vue&type=template&id=4d9afb87&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\src\\pages\\Layout\\Extra\\FixedPlugin.vue","mtime":1647614444000},{"path":"C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652976208441},{"path":"C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1652976222707},{"path":"C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652976208441},{"path":"C:\\Users\\asus\\Desktop\\Final One\\vue-material-dashboard-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1652976217296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}