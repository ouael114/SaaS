{"remainingRequest":"D:\\vue-material-dashboard-master - Copie\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\vue-material-dashboard-master - Copie\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\vue-material-dashboard-master - Copie\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue-material-dashboard-master - Copie\\src\\pages\\Dashboard.vue?vue&type=template&id=1d81e2c0&","dependencies":[{"path":"D:\\vue-material-dashboard-master - Copie\\src\\pages\\Dashboard.vue","mtime":1653322045723},{"path":"D:\\vue-material-dashboard-master - Copie\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652976208441},{"path":"D:\\vue-material-dashboard-master - Copie\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1652976222707},{"path":"D:\\vue-material-dashboard-master - Copie\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652976208441},{"path":"D:\\vue-material-dashboard-master - Copie\\node_modules\\vue-loader\\lib\\index.js","mtime":1652976217296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}